{"version":3,"sources":["theme/mergeThemes.ts","theme/Theme.tsx","hooks/useColorScheme.ts","theme/getDarkTheme.ts","theme/getBaseTheme.ts","theme/getLightTheme.ts","components/ToastContainer.tsx","components/Background.tsx","components/Button.tsx","components/Column.tsx","components/Input.tsx","components/QrCode.tsx","components/Row.tsx","components/SendButton.tsx","components/CopyableField.tsx","components/CopyButton.tsx","components/TextArea.tsx","components/SecretInput.tsx","components/ViewButton.tsx","components/Layout.tsx","components/Content.tsx","helpers/Url.ts","pages/Requester.tsx","pages/Sender.tsx","pages/Root.tsx","components/App.tsx","serviceWorker.ts","helpers/Dom.ts","index.tsx"],"names":["mergeThemes","baseTheme","theme","merge","arrayMerge","_","sourceArray","Theme","children","mediaQuery","window","matchMedia","useState","matches","colorScheme","setColorScheme","useEffect","listener","e","addEventListener","removeEventListener","useColorScheme","spacing","default","backgroundColor","common","focus","boxShadow","button","borderColor","color","input","readonly","hover","toast","style","success","iconTheme","primary","secondary","borderWidth","borderStyle","ToastContainer","useContext","ThemeContext","toastOptions","Background","styled","div","props","minHeight","Button","display","justifyContent","alignItems","height","lineHeight","paddingTop","paddingBottom","paddingLeft","paddingRight","borderRadius","filter","Column","flexDirection","gap","Input","padding","width","QrCode","QRCode","attrs","level","renderAs","Row","SendButton","onClick","disabled","fixedWidth","icon","faPaperPlane","ReadOnlyInput","readOnly","type","CopyableField","value","message","CopyButton","a","navigator","clipboard","isSecureContext","writeText","textArea","document","createElement","position","left","top","body","appendChild","select","Promise","res","rej","execCommand","remove","msg","copyToClipboard","faCopy","TextArea","textarea","StyledTextArea","resize","SecretInput","className","visible","setVisible","ViewButton","faEyeSlash","faEye","Layout","Content","maxWidth","UrlHelper","url","base","baseURI","replace","charAt","RequesterPage","secret","setSecret","onSecretReceived","Bugout","announce","bugout","address","register","_address","args","cb","destroy","err","useBugoutServer","newSecret","absolute","SenderPage","useParams","serverAddress","ready","setReady","on","useBugoutClient","location","href","onChange","target","rpc","result","console","log","sendSecret","RootPage","path","element","App","Boolean","hostname","test","DomHelper","URL","pathname","getBasePath","root","getElementById","ReactDOM","render","StrictMode","basename","serviceWorker","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.73f142dd.chunk.js","sourcesContent":["import merge from \"deepmerge\";\nimport type { DefaultTheme } from \"styled-components\";\n\nexport default function mergeThemes(\n    baseTheme: DefaultTheme,\n    theme: DefaultTheme,\n): DefaultTheme {\n    return merge(baseTheme, theme, {\n        arrayMerge: (_, sourceArray) => sourceArray,\n    });\n}\n","import type { PropsWithChildren } from \"react\";\nimport useColorScheme from \"hooks/useColorScheme\";\nimport { ThemeProvider } from \"styled-components\";\nimport getDarkTheme from \"theme/getDarkTheme\";\nimport getLightTheme from \"theme/getLightTheme\";\n\nexport default function Theme({\n    children,\n}: PropsWithChildren<Record<string, unknown>>) {\n    const { colorScheme } = useColorScheme();\n\n    const theme = colorScheme === \"dark\" ? getDarkTheme() : getLightTheme();\n\n    return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n}\n","import { useEffect, useState } from \"react\";\n\ntype ColorScheme = \"light\" | \"dark\";\n\ntype Return = {\n    colorScheme: ColorScheme;\n};\n\nexport default function useColorScheme(): Return {\n    const mediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n    // TODO: support/persist manual toggle...\n    const [colorScheme, setColorScheme] = useState<ColorScheme>(\n        mediaQuery.matches ? \"dark\" : \"light\",\n    );\n\n    useEffect(() => {\n        // TODO: don't need to listen if the user has set their preference\n        const listener = (e: MediaQueryListEvent) => {\n            setColorScheme(e.matches ? \"dark\" : \"light\");\n        };\n\n        mediaQuery.addEventListener(\"change\", listener);\n\n        return () => {\n            mediaQuery.removeEventListener(\"change\", listener);\n        };\n    });\n\n    return {\n        colorScheme,\n    };\n}\n","import type { DefaultTheme } from \"styled-components\";\nimport getBaseTheme from \"./getBaseTheme\";\nimport mergeThemes from \"./mergeThemes\";\n\nexport default function getDarkTheme(): DefaultTheme {\n    return mergeThemes(getBaseTheme(), {\n        // primaryColor: '',\n        backgroundColor: \"#36454f\",\n        common: {\n            focus: {\n                boxShadow: \"0 0 0 0.2rem #c9bab040\",\n            },\n        },\n        button: {\n            backgroundColor: \"#c9bab0\",\n            borderColor: \"#c9bab0\",\n            color: \"#434343\",\n        },\n        input: {\n            borderColor: \"#ffffff1f\",\n            color: \"#e4ddd8\",\n            readonly: {\n                color: \"#c7c9d5\",\n            },\n            focus: {\n                borderColor: \"#e4ddd8\",\n            },\n            hover: {\n                backgroundColor: \"#303e47\",\n            },\n        },\n        toast: {\n            // TODO: change (currently same as light)\n            style: {\n                backgroundColor: \"#36454f\",\n                color: \"#c7c9d5\",\n            },\n            success: {\n                iconTheme: {\n                    primary: \"#61d345\",\n                    secondary: \"white\",\n                },\n                style: {\n                    borderWidth: 2,\n                    borderColor: \"#61d345\",\n                    borderStyle: \"solid\",\n                },\n            },\n        },\n    });\n}\n","import type { DefaultTheme } from \"styled-components\";\n\nexport default function getBaseTheme(): DefaultTheme {\n    return {\n        spacing: {\n            default: 4,\n        },\n    };\n}\n","import type { DefaultTheme } from \"styled-components\";\nimport getBaseTheme from \"./getBaseTheme\";\nimport mergeThemes from \"./mergeThemes\";\n\nexport default function getLightTheme(): DefaultTheme {\n    return mergeThemes(getBaseTheme(), {\n        // primaryColor: '',\n        backgroundColor: \"white\",\n        common: {\n            focus: {\n                boxShadow: \"0 0 0 0.2rem #007bff40\",\n            },\n        },\n        button: {\n            backgroundColor: \"#007bff\",\n            borderColor: \"#007bff\",\n            color: \"white\",\n        },\n        input: {\n            borderColor: \"rgba(0,0,0,0.12)\",\n            color: \"rgba(0,0,0,0.8)\",\n            readonly: {\n                color: \"rgba(0,0,0,0.54)\",\n            },\n            focus: {\n                borderColor: \"#7fbdff\",\n            },\n            hover: {\n                backgroundColor: \"#F7F7F7\",\n            },\n        },\n        toast: {\n            style: {\n                backgroundColor: \"#36454f\",\n                color: \"#c7c9d5\",\n            },\n            success: {\n                iconTheme: {\n                    primary: \"#61d345\",\n                    secondary: \"white\",\n                },\n                style: {\n                    borderWidth: 2,\n                    borderColor: \"#61d345\",\n                    borderStyle: \"solid\",\n                },\n            },\n        },\n    });\n}\n","import { useContext } from \"react\";\nimport { Toaster } from \"react-hot-toast\";\nimport { ThemeContext } from \"styled-components\";\n\nexport default function ToastContainer() {\n    const theme = useContext(ThemeContext);\n\n    return (\n        // TODO: some options I may want to set outside of the theme\n        <Toaster toastOptions={theme.toast} />\n    );\n}\n","import styled from \"styled-components\";\n\nconst Background = styled.div((props) => ({\n    backgroundColor: props.theme.backgroundColor,\n    minHeight: \"100%\",\n}));\n\nexport default Background;\n","import styled from \"styled-components\";\n\nconst Button = styled.button((props) => ({\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: 42,\n    lineHeight: 1,\n    paddingTop: 8,\n    paddingBottom: 8,\n    paddingLeft: 16,\n    paddingRight: 16,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderRadius: 4, // TODO: theme\n    backgroundColor: props.theme.button?.backgroundColor,\n    borderColor: props.theme.button?.borderColor,\n    color: props.theme.button?.color,\n    \":focus\": {\n        boxShadow: props.theme.common?.focus?.boxShadow,\n    },\n    // TODO: maybe just this but in themes\n    \":hover\": {\n        filter: \"brightness(115%)\",\n    },\n    \":not(:disabled):active\": {\n        filter: \"brightness(130%)\",\n    },\n    // \":hover\": {\n    //     filter: 'brightness(85%)',\n    // },\n    // \":not(:disabled):active\": {\n    //     filter: 'brightness(70%)',\n    // },\n    // TODO: theme\n    \":disabled\": {\n        filter: \"saturate(0)\",\n    },\n}));\n\nexport default Button;\n","import styled from \"styled-components\";\nimport type { CSSProperties } from \"react\";\n\ntype ColumnProps = {\n    // TODO: why isn't CSSProperties strict?\n    justifyContent?: CSSProperties[\"justifyContent\"];\n    gap?: CSSProperties[\"gap\"];\n};\n\nconst Column = styled.div<ColumnProps>((props) => ({\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: props.justifyContent,\n    gap: props.gap ?? props.theme.spacing?.default,\n}));\n\nexport default Column;\n","import styled from \"styled-components\";\n\nconst Input = styled.input((props) => ({\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderRadius: 4,\n    padding: \"8px 16px\",\n    lineHeight: \"1.5\",\n    width: \"100%\",\n\n    borderColor: props.theme.input?.borderColor,\n    color: props.theme.input?.color,\n    \"&[readonly]\": {\n        color: props.theme.input?.readonly?.color,\n    },\n    \":focus\": {\n        borderColor: props.theme.input?.focus?.borderColor,\n        boxShadow: props.theme.common?.focus?.boxShadow,\n    },\n    \":hover\": {\n        backgroundColor: props.theme.input?.hover?.backgroundColor,\n    },\n}));\n\nexport default Input;\n","import styled from \"styled-components\";\nimport QRCode from \"qrcode.react\";\n\nconst QrCode = styled(QRCode).attrs((props) => ({\n    level: props.level || \"H\",\n    renderAs: \"svg\",\n}))({\n    borderRadius: 4,\n    width: \"100%\",\n    height: \"100%\",\n});\n\nexport default QrCode;\n","import styled from \"styled-components\";\nimport type { CSSProperties } from \"react\";\n\ntype RowProps = {\n    // TODO: why isn't CSSProperties strict?\n    justifyContent?: CSSProperties[\"justifyContent\"];\n    gap?: CSSProperties[\"gap\"];\n};\n\nconst Row = styled.div<RowProps>((props) => ({\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: props.justifyContent,\n    gap: props.gap ?? props.theme.spacing?.default,\n}));\n\nexport default Row;\n","import { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport type { MouseEventHandler } from \"react\";\nimport Button from \"./Button\";\n\ntype SendButtonProps = {\n    onClick: MouseEventHandler<HTMLButtonElement>;\n    disabled?: boolean;\n};\n\nexport default function SendButton({ onClick, disabled }: SendButtonProps) {\n    return (\n        <Button disabled={disabled} onClick={onClick}>\n            <FontAwesomeIcon fixedWidth icon={faPaperPlane} />\n        </Button>\n    );\n}\n","import styled from \"styled-components\";\nimport { Row, CopyButton, Input } from \"components\";\n\nconst ReadOnlyInput = styled(Input).attrs({\n    readOnly: true,\n    type: \"text\",\n})({});\n\ntype CopyableFieldProps = {\n    value: string;\n    message?: string;\n};\n\nexport default function CopyableField({ value, message }: CopyableFieldProps) {\n    return (\n        <Row>\n            <ReadOnlyInput value={value} />\n            <CopyButton value={value} message={message} />\n        </Row>\n    );\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCopy } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"components\";\nimport toast from \"react-hot-toast\";\n\nasync function copyToClipboard(value: string, message: string) {\n    // TODO: cleanup code...\n    // navigator clipboard api needs a secure context (https)\n    if (navigator.clipboard && window.isSecureContext) {\n        // navigator clipboard api method'\n        await navigator.clipboard.writeText(value);\n    } else {\n        // text area method\n        const textArea = document.createElement(\"textarea\");\n        textArea.value = value;\n        // make the textarea out of viewport\n        textArea.style.position = \"fixed\";\n        textArea.style.left = \"-999999px\";\n        textArea.style.top = \"-999999px\";\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        await new Promise<void>((res, rej) => {\n            // here the magic happens\n            document.execCommand(\"copy\") ? res() : rej();\n            textArea.remove();\n        });\n    }\n\n    // TODO: fix so it depends on status\n    toast.success(message);\n}\n\ntype CopyButtonProps = {\n    value: string;\n    message?: string;\n};\n\nexport default function CopyButton({ value, message }: CopyButtonProps) {\n    const msg = message || \"Copied!\";\n\n    return (\n        <Button onClick={() => copyToClipboard(value, msg)}>\n            <FontAwesomeIcon fixedWidth icon={faCopy} />\n        </Button>\n    );\n}\n","import styled from \"styled-components\";\n\nconst TextArea = styled.textarea((props) => ({\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderRadius: 4,\n    padding: \"8px 16px\",\n    lineHeight: \"1.5\",\n\n    borderColor: props.theme.input?.borderColor,\n    color: props.theme.input?.color,\n    \"&[readonly]\": {\n        color: props.theme.input?.readonly?.color,\n    },\n    \":focus\": {\n        borderColor: props.theme.input?.focus?.borderColor,\n        boxShadow: props.theme.common?.focus?.boxShadow,\n    },\n    \":hover\": {\n        backgroundColor: props.theme.input?.hover?.backgroundColor,\n    },\n}));\n\nexport default TextArea;\n","import { useState } from \"react\";\nimport { Column, Row, CopyButton, ViewButton } from \"components\";\nimport TextArea from \"components/TextArea\"; // TODO: why is this sometimes undefined when included through the index...\nimport styled from \"styled-components\";\n\nconst StyledTextArea = styled(TextArea)({\n    height: 200,\n    resize: \"none\",\n});\n\ntype SecretInputProps = {\n    className?: string;\n    value: string;\n};\n\nexport default function SecretInput({ className, value }: SecretInputProps) {\n    const [visible, setVisible] = useState(false);\n\n    return (\n        <Column className={className}>\n            <StyledTextArea\n                readOnly\n                value={visible || !value ? value : \"***\"}\n            />\n            <Row justifyContent=\"space-between\">\n                <ViewButton\n                    visible={visible}\n                    onClick={() => setVisible(!visible)}\n                />\n                <CopyButton value={value} message=\"Copied secret!\" />\n            </Row>\n        </Column>\n    );\n}\n","import { faEyeSlash, faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport type { MouseEventHandler } from \"react\";\nimport Button from \"./Button\";\n\ntype ViewButtonProps = {\n    visible: boolean;\n    onClick: MouseEventHandler<HTMLButtonElement>;\n};\n\nexport default function ViewButton({ visible, onClick }: ViewButtonProps) {\n    return (\n        <Button onClick={onClick}>\n            <FontAwesomeIcon fixedWidth icon={visible ? faEyeSlash : faEye} />\n        </Button>\n    );\n}\n","import styled from \"styled-components\";\nimport { Row } from \"components\";\n\nconst Layout = styled(Row)((props) => ({\n    padding: props.theme.spacing?.default,\n    justifyContent: \"space-around\",\n}));\n\nexport default Layout;\n","import styled from \"styled-components\";\nimport { Column } from \"components\";\n\nconst Content = styled(Column)({\n    maxWidth: 400,\n    width: \"100%\",\n});\n\nexport default Content;\n","export default class UrlHelper {\n    static absolute(url: string): string {\n        const base = document.baseURI.replace(/\\/$/, \"\");\n\n        if (!url) {\n            return base;\n        }\n\n        const firstCharacter = url.charAt(0);\n        if (firstCharacter !== \"/\") {\n            return `${base}/${url}`;\n        }\n\n        return `${base}${url}`;\n    }\n}\n","import {\n    QrCode,\n    CopyableField,\n    SecretInput,\n    Layout,\n    Content,\n} from \"components\";\nimport UrlHelper from \"helpers/Url\";\nimport { useState, useEffect } from \"react\";\nimport Bugout from \"bugout\";\nimport toast from \"react-hot-toast\";\n\n// TODO: cleanup\ntype OnSecretReceived = (secret: string) => boolean;\nfunction useBugoutServer({\n    onSecretReceived,\n}: {\n    onSecretReceived: OnSecretReceived;\n}) {\n    // const [ready, setReady] = useState(false);\n    const [bugout] = useState<Bugout>(\n        () =>\n            new Bugout({\n                announce: [\n                    \"wss://tracker.openwebtorrent.com\",\n                    \"wss://tracker.btorrent.xyz\",\n                ],\n            }),\n    );\n\n    const address = bugout.address();\n\n    useEffect(() => {\n        // register rpc calls clients can use\n        bugout.register(\n            \"shareSecret\",\n            (_address, args: Record<string, string>, cb) => {\n                const { secret } = args;\n                if (secret) {\n                    const success = onSecretReceived(secret);\n                    cb({ success });\n                }\n            },\n        );\n\n        // TODO: connections are weird, probs just not worth relying on for this\n        // handle events\n        // bugout.on(\"seen\", (peerAddress) => {\n        //     toast.success('Connected!');\n        // });\n        // bugout.on(\"connections\", (c) => {\n        //     // if (c === 0) {\n        //     //     setReady(true);\n        //     // }\n\n        //     // TODO: maybe show in some better way...\n        //     // if (c === 1) {\n        //     //     toast.success('Connected!');\n        //     // }\n        // });\n\n        // TODO: figure out why this causes issues\n        return () => {\n            try {\n                bugout.destroy();\n            } catch (err) {\n                // TODO: not sure why this throws sometimes\n            }\n        };\n    }, [bugout, onSecretReceived]);\n\n    return {\n        bugout,\n        address,\n    };\n}\n\n// TODO: consider some sort of loading/ready indicator\nexport default function RequesterPage() {\n    const [secret, setSecret] = useState(\"\");\n    const { address } = useBugoutServer({\n        onSecretReceived: (newSecret) => {\n            setSecret(newSecret);\n\n            toast.success(\"Secret received!\");\n            // TODO: disconnect\n            return true;\n        },\n    });\n    const url = UrlHelper.absolute(`/${address}`);\n\n    return (\n        <Layout>\n            <Content>\n                <QrCode value={url} />\n                <CopyableField value={url} message=\"Copied url!\" />\n                <SecretInput value={secret} />\n            </Content>\n        </Layout>\n    );\n}\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n    TextArea,\n    CopyableField,\n    SendButton,\n    Layout,\n    Content,\n} from \"components\";\nimport toast from \"react-hot-toast\";\nimport Bugout from \"bugout\";\n\nconst StyledTextArea = styled(TextArea)({\n    height: 200,\n    resize: \"none\",\n});\n\n// TODO: refactor\nfunction useBugoutClient(serverAddress: string) {\n    const [ready, setReady] = useState(false);\n    const [bugout] = useState<Bugout>(\n        () =>\n            new Bugout(serverAddress, {\n                announce: [\n                    \"wss://tracker.openwebtorrent.com\",\n                    \"wss://tracker.btorrent.xyz\",\n                ],\n            }),\n    );\n\n    const address = bugout.address();\n\n    useEffect(() => {\n        // handle events\n        bugout.on(\"server\", function () {\n            setReady(true);\n\n            // TODO: maybe show in some better way...\n            toast.success(\"Connected!\");\n        });\n\n        return () => {\n            bugout.destroy();\n        };\n    }, [bugout, setReady]);\n\n    return {\n        bugout,\n        ready,\n        address,\n    };\n}\n\nfunction sendSecret(bugout: Bugout, secret: string) {\n    bugout.rpc(\"shareSecret\", { secret }, function (result: unknown) {\n        // TODO: if server responds positively (result.success), disconnect\n        // TODO: check result.error too?\n        console.log(61, { result });\n    });\n\n    // TODO: toast conditional on result\n    toast.success(\"Secret shared!\");\n}\n\n// TODO: add a loading indicator for sending\n// TODO: add an indicator for whether we're connected\nexport default function SenderPage() {\n    const { address } = useParams();\n    const [secret, setSecret] = useState(\"\");\n    const { bugout, ready } = useBugoutClient(address ?? \"\");\n\n    return (\n        <Layout>\n            <Content>\n                <CopyableField value={window.location.href} />\n                {/* TODO: would be nice if text area could be hidden while typing... */}\n                <StyledTextArea\n                    value={secret}\n                    onChange={(e) => setSecret(e.target.value)}\n                />\n                <SendButton\n                    disabled={!ready}\n                    onClick={() => sendSecret(bugout, secret)}\n                />\n            </Content>\n        </Layout>\n    );\n}\n","import { Route, Routes } from \"react-router-dom\";\nimport RequesterPage from \"pages/Requester\";\nimport SenderPage from \"pages/Sender\";\n\nexport default function RootPage() {\n    return (\n        <Routes>\n            <Route path=\"/\" element={<RequesterPage />} />\n            <Route path=\"/:address\" element={<SenderPage />} />\n            <Route path=\"*\" element={<p>Much wow</p>} />\n        </Routes>\n    );\n}\n","import Theme from \"theme/Theme\";\nimport ToastContainer from \"components/ToastContainer\";\nimport Background from \"components/Background\";\nimport RootPage from \"pages/Root\";\n\nexport default function App() {\n    return (\n        <Theme>\n            <Background>\n                <ToastContainer />\n                <RootPage />\n            </Background>\n        </Theme>\n    );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/.test(\n            window.location.hostname,\n        ),\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                void navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                void navigator.serviceWorker.ready.then((registration) => {\n                    void registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                void registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","export default class DomHelper {\n    static getBasePath(): string {\n        const baseUrl = new URL(document.baseURI);\n        const pathname = baseUrl.pathname;\n\n        return pathname.replace(/\\/$/, \"\");\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"the-new-css-reset/css/reset.css\";\nimport \"@fontsource/roboto-mono\";\nimport \"index.css\";\nimport App from \"components/App\";\nimport * as serviceWorker from \"serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport DomHelper from \"helpers/Dom\";\nimport \"ghspa\";\n\nconst base = DomHelper.getBasePath();\nconst root = document.getElementById(\"root\");\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter basename={base}>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    root,\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}